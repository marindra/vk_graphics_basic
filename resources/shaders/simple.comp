#version 430

layout( local_size_x = 1024 ) in;

layout( push_constant ) uniform params {
  uint len;
} PushConstant;

layout(std430, binding = 0) buffer a 
{
    float A[];
};

layout(std430, binding = 1) buffer b
{
    float smoothedA[];
};

layout(std430, binding = 2) buffer Answ
{
    float answer[];
};

void main() 
{
    uint idx = gl_GlobalInvocationID.x;
    if (idx < PushConstant.len) {
        // sum[idx] = A[idx] + B[idx];
        float curAnsw = 0.0f;
        float scaler = 1.0f / 7.0f;
        int minShift = max(-3, -int(idx));
        int maxShift = min(3, int(PushConstant.len) - int(idx) - 1);
        for (int i = minShift; i <= maxShift; ++i) {
            curAnsw += scaler * A[idx + i];
        }
        smoothedA[idx] = curAnsw;
        answer[idx] = A[idx] - smoothedA[idx];
    }
}